/**
 * MyLassi.XYZ
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: Develop
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import CreateLessonPageTemplate from '../model/CreateLessonPageTemplate';
import Error from '../model/Error';
import LessonPageTemplate from '../model/LessonPageTemplate';
import LessonPageTemplateList from '../model/LessonPageTemplateList';
import LessonPageTemplateOption from '../model/LessonPageTemplateOption';

/**
* LessonPageTemplate service.
* @module api/LessonPageTemplateApi
* @version Develop
*/
export default class LessonPageTemplateApi {

    /**
    * Constructs a new LessonPageTemplateApi. 
    * @alias module:api/LessonPageTemplateApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the apiV2LessonsPageTemplatesDocIdGet operation.
     * @callback module:api/LessonPageTemplateApi~apiV2LessonsPageTemplatesDocIdGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/LessonPageTemplate} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {Number} docId 
     * @param {module:api/LessonPageTemplateApi~apiV2LessonsPageTemplatesDocIdGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/LessonPageTemplate}
     */
    apiV2LessonsPageTemplatesDocIdGet(docId, callback) {
      let postBody = null;
      // verify the required parameter 'docId' is set
      if (docId === undefined || docId === null) {
        throw new Error("Missing the required parameter 'docId' when calling apiV2LessonsPageTemplatesDocIdGet");
      }

      let pathParams = {
        'doc_id': docId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['ApiKeyAuth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = LessonPageTemplate;
      return this.apiClient.callApi(
        '/api/v2/lessons/pageTemplates/{doc_id}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apiV2LessonsPageTemplatesDocIdPatch operation.
     * @callback module:api/LessonPageTemplateApi~apiV2LessonsPageTemplatesDocIdPatchCallback
     * @param {String} error Error message, if any.
     * @param {module:model/LessonPageTemplate} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {Number} docId 
     * @param {module:model/LessonPageTemplateOption} lessonPageTemplateOption 
     * @param {module:api/LessonPageTemplateApi~apiV2LessonsPageTemplatesDocIdPatchCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/LessonPageTemplate}
     */
    apiV2LessonsPageTemplatesDocIdPatch(docId, lessonPageTemplateOption, callback) {
      let postBody = lessonPageTemplateOption;
      // verify the required parameter 'docId' is set
      if (docId === undefined || docId === null) {
        throw new Error("Missing the required parameter 'docId' when calling apiV2LessonsPageTemplatesDocIdPatch");
      }
      // verify the required parameter 'lessonPageTemplateOption' is set
      if (lessonPageTemplateOption === undefined || lessonPageTemplateOption === null) {
        throw new Error("Missing the required parameter 'lessonPageTemplateOption' when calling apiV2LessonsPageTemplatesDocIdPatch");
      }

      let pathParams = {
        'doc_id': docId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['ApiKeyAuth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = LessonPageTemplate;
      return this.apiClient.callApi(
        '/api/v2/lessons/pageTemplates/{doc_id}', 'PATCH',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apiV2LessonsPageTemplatesGet operation.
     * @callback module:api/LessonPageTemplateApi~apiV2LessonsPageTemplatesGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/LessonPageTemplateList} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {Object} opts Optional parameters
     * @param {Number} opts.limit 
     * @param {Number} opts.page 
     * @param {module:api/LessonPageTemplateApi~apiV2LessonsPageTemplatesGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/LessonPageTemplateList}
     */
    apiV2LessonsPageTemplatesGet(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'limit': opts['limit'],
        'page': opts['page']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['ApiKeyAuth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = LessonPageTemplateList;
      return this.apiClient.callApi(
        '/api/v2/lessons/pageTemplates', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apiV2LessonsPageTemplatesPost operation.
     * @callback module:api/LessonPageTemplateApi~apiV2LessonsPageTemplatesPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/LessonPageTemplate} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {module:model/CreateLessonPageTemplate} createLessonPageTemplate 
     * @param {module:api/LessonPageTemplateApi~apiV2LessonsPageTemplatesPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/LessonPageTemplate}
     */
    apiV2LessonsPageTemplatesPost(createLessonPageTemplate, callback) {
      let postBody = createLessonPageTemplate;
      // verify the required parameter 'createLessonPageTemplate' is set
      if (createLessonPageTemplate === undefined || createLessonPageTemplate === null) {
        throw new Error("Missing the required parameter 'createLessonPageTemplate' when calling apiV2LessonsPageTemplatesPost");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['ApiKeyAuth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = LessonPageTemplate;
      return this.apiClient.callApi(
        '/api/v2/lessons/pageTemplates', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
